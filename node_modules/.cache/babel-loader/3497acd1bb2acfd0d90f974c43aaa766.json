{"ast":null,"code":"var _jsxFileName = \"/Users/clementsortino/technique/mastermind/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport './framework.min.css';\nimport Navbar from './Navbar';\nimport Plateau from './Plateau';\nimport Line from './Line';\nimport Control from './Control';\nimport Modal from './Modal';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCase: 0,\n      currentLine: 0,\n      combination: [],\n      combinationToFind: this.generateCombination(),\n      game: [[[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []]],\n      showModal: \"hidden\",\n      score: 1\n    };\n    this.change = this.change.bind(this);\n    this.undo = this.undo.bind(this);\n    this.compare = this.compare.bind(this);\n    this.submit = this.submit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  change(color) {\n    const gameBis = [...this.state.game];\n    const combination = [...this.state.combination];\n\n    if (this.state.currentCase < 4) {\n      gameBis[this.state.currentLine][0].push(color);\n      this.setState(state => ({\n        game: gameBis,\n        currentCase: state.currentCase + 1\n      }));\n    }\n  }\n\n  undo() {\n    const gameBis = [...this.state.game];\n\n    if (this.state.currentCase > 0) {\n      gameBis[this.state.currentLine][0].pop();\n      this.setState(state => ({\n        game: gameBis,\n        currentCase: state.currentCase - 1\n      }));\n    }\n  }\n\n  submit() {\n    let gameBis = [...this.state.game];\n\n    if (this.state.currentCase == 4) {\n      let result = this.compare();\n\n      for (let index = 0; index < result[0]; index++) {\n        gameBis[this.state.currentLine][1].push(\" black\");\n      }\n\n      for (let index = 0; index < result[1]; index++) {\n        gameBis[this.state.currentLine][1].push(\" grey\");\n      }\n\n      this.setState(state => ({\n        game: gameBis,\n        currentLine: state.currentLine + 1,\n        currentCase: 0\n      }));\n    }\n  }\n\n  compare() {\n    let combination = [...this.state.game[this.state.currentLine][0]];\n    let combinationToFind = [...this.state.combinationToFind];\n    let good = 0;\n    let bad = 0;\n\n    for (let index = 0; index < combination.length; index++) {\n      if (combination[index] == combinationToFind[index]) {\n        good++;\n        combinationToFind[index] = \"x\";\n        combination[index] = \"a\";\n      }\n    }\n\n    for (var index = 0; index < combinationToFind.length; index++) {\n      if (combinationToFind.includes(combination[index])) {\n        bad++;\n        combinationToFind[combinationToFind.indexOf(combination[index])] = \"x\";\n        combination[index] = \"a\";\n      }\n    }\n\n    console.log(this.state.combinationToFind);\n\n    if (good == 4) {\n      this.setState({\n        showModal: \"show\",\n        score: this.state.score++\n      });\n    }\n\n    console.log(this.state.score);\n    return [good, bad];\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: \"hidden\",\n      game: [[[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []], [[], []]]\n    });\n  }\n\n  generateCombination() {\n    let combination = [];\n\n    for (let i = 0; i < 4; i++) {\n      let random = Math.floor(Math.random() * 6);\n      let colors = [\"red\", \"blue\", \"green\", \"yellow\", \"orange\", \"purple\"];\n      combination.push(colors[i]);\n    }\n\n    return combination;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Plateau, {\n      game: this.state.game,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Control, {\n      colorize: this.change,\n      undo: this.undo,\n      submit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      showModal: this.state.showModal,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/clementsortino/technique/mastermind/src/App.js"],"names":["React","Navbar","Plateau","Line","Control","Modal","App","Component","constructor","props","state","currentCase","currentLine","combination","combinationToFind","generateCombination","game","showModal","score","change","bind","undo","compare","submit","closeModal","color","gameBis","push","setState","pop","result","index","good","bad","length","includes","indexOf","console","log","i","random","Math","floor","colors","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './framework.min.css';\nimport Navbar from './Navbar';\nimport Plateau from './Plateau';\nimport Line from './Line';\nimport Control from './Control';\nimport Modal from './Modal';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentCase: 0,\n      currentLine: 0,\n      combination: [],\n      combinationToFind: this.generateCombination(),\n      game: [\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n      ],\n      showModal: \"hidden\",\n      score: 1\n    };\n    this.change = this.change.bind(this);\n    this.undo = this.undo.bind(this);\n    this.compare = this.compare.bind(this);\n    this.submit = this.submit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  change(color) {\n    const gameBis = [...this.state.game]\n    const combination = [...this.state.combination]\n\n    if (this.state.currentCase < 4) {\n      gameBis[this.state.currentLine][0].push(color)\n\n      this.setState((state) => ({\n        game: gameBis,\n        currentCase: state.currentCase + 1,\n      }));\n    }\n\n  }\n\nundo() {\n  const gameBis = [...this.state.game];\n\n  if (this.state.currentCase > 0) {\n    gameBis[this.state.currentLine][0].pop();\n\n    this.setState(state => ({\n      game: gameBis,\n      currentCase: state.currentCase - 1\n    }))\n  }\n}\n\nsubmit() {\n  let gameBis = [...this.state.game]\n  if (this.state.currentCase == 4) {\n    let result = this.compare();\n    for (let index = 0; index < result[0]; index++) {\n      gameBis[this.state.currentLine][1].push(\" black\")\n    }\n    for (let index = 0; index < result[1]; index++) {\n      gameBis[this.state.currentLine][1].push(\" grey\")\n    }\n\n    this.setState(state => ({\n      game: gameBis,\n      currentLine:  state.currentLine + 1,\n      currentCase: 0\n    }))\n  }\n}\n\ncompare() {\n  let combination = [...this.state.game[this.state.currentLine][0]]\n  let combinationToFind = [...this.state.combinationToFind]\n  let good = 0\n  let bad = 0\n\n  for (let index = 0; index < combination.length; index++) {\n    if (combination[index] == combinationToFind[index]) {\n      good++\n      combinationToFind[index] = \"x\"\n      combination[index] = \"a\"\n    }\n  }\n\n  for (var index = 0; index < combinationToFind.length; index++) {\n    if (combinationToFind.includes(combination[index])) {\n      bad++\n      combinationToFind[combinationToFind.indexOf(combination[index])] = \"x\"\n      combination[index] = \"a\"\n    }\n  }\n  console.log(this.state.combinationToFind);\n  if (good == 4) {\n    this.setState({\n      showModal: \"show\",\n      score: this.state.score++\n    })\n  }\n  console.log(this.state.score);\n  return [good,bad];\n}\n\ncloseModal() {\n  this.setState({\n    showModal: \"hidden\",\n    game: [\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n    ]\n  })\n}\n\ngenerateCombination() {\n  let combination = []\n  for (let i = 0; i < 4; i++) {\n    let random = Math.floor(Math.random()*6)\n    let colors = [\"red\",\"blue\",\"green\",\"yellow\",\"orange\",\"purple\"]\n    combination.push(colors[i])\n  }\n  return combination;\n}\n\n  render() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <main>\n        <Plateau game={this.state.game}></Plateau>\n        <Control colorize={this.change} undo={this.undo} submit={this.submit}></Control>\n        <Modal showModal={this.state.showModal} closeModal={this.closeModal}></Modal>\n      </main>\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}