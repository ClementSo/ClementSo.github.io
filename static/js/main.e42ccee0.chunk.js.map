{"version":3,"sources":["Navbar.js","Line.js","Plateau.js","Control.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","href","target","onClick","score","Line","line","Plateau","lines","game","map","element","index","key","Control","colorize","undo","submit","Modal","this","showModal","nameModal","closeModal","React","Component","App","state","currentCase","currentLine","combination","combinationToFind","generateCombination","change","bind","compare","color","gameBis","push","setState","pop","result","good","bad","length","includes","indexOf","console","log","i","random","Math","floor","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e42ccee0.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Navbar(props) {\n    return (\n        <header className=\"bg:color:red:7\">\n                <a href=\"https://fr.wikipedia.org/wiki/Mastermind\" target=\"_blank\" className=\"logo\">Mastermind</a>\n            <nav>\n                <ul>\n                <li><a href=\"#\" onClick={props.score}>Scores</a></li>\n                <li><a href=\"https://www.regles-de-jeux.com/regle-du-mastermind/\" target=\"_blank\">RÃ¨gles</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nfunction Line(props) {\n    return (\n        <div className=\"line\">\n            <div className=\"combinaison\">\n                <div className={\"case-combinaison \" + (props.line[0][0] ? props.line[0][0] : \"\" )}></div>\n                <div className={\"case-combinaison \" + (props.line[0][1] ? props.line[0][1] : \"\" )}></div>\n                <div className={\"case-combinaison \" + (props.line[0][2] ? props.line[0][2] : \"\" )}></div>\n                <div className={\"case-combinaison \" + (props.line[0][3] ? props.line[0][3] : \"\" )}></div>\n            </div>\n\n            <div className=\"result\">\n            <div className={\"case-result\" + (props.line[1][0] ? props.line[1][0] : \"\" )}></div>\n            <div className={\"case-result\" + (props.line[1][1] ? props.line[1][1] : \"\" )}></div>\n            <div className={\"case-result\" + (props.line[1][2] ? props.line[1][2] : \"\" )}></div>\n            <div className={\"case-result\" + (props.line[1][3] ? props.line[1][3] : \"\" )}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Line","import React from 'react'\nimport Line from './Line'\n\nfunction Plateau(props) {\n\n    const lines = props.game.map((element , index) => (\n        <Line key={index} line={element}></Line>\n    )) \n    return (\n        <div className=\"plateau\">\n            {lines}\n        </div>\n    )\n}\n\nexport default Plateau","import React from 'react'\n\nfunction Control(props) {\n    return (\n        <div className=\"control\">\n            <div className=\"combinaison\">\n                <div className=\"color red\" onClick={() => props.colorize('red')}></div>\n                <div className=\"color orange\" onClick={() => props.colorize('orange')}></div>\n                <div className=\"color yellow\" onClick={() => props.colorize('yellow')}></div>\n                <div className=\"color green\" onClick={() => props.colorize('green')}></div>\n                <div className=\"color blue\" onClick={() => props.colorize('blue')}></div>\n                <div className=\"color purple\" onClick={() => props.colorize('purple')}></div>\n            </div>\n\n            <div className=\"actions\">\n                <button onClick={props.undo}>Undo</button>\n                <button onClick={props.submit}>Submit</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Control\n","import React from 'react';\nimport './App.css';\n\nclass Modal extends React.Component {\n  render() {\n    return (\n      <div className={\"modal \"+this.props.showModal}>\n        <div className=\"modal-content\">\n          <p>{this.props.nameModal}</p>\n          <span onClick={this.props.closeModal}>close</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport './App.css';\nimport './framework.min.css';\nimport Navbar from './Navbar';\nimport Plateau from './Plateau';\nimport Line from './Line';\nimport Control from './Control';\nimport Modal from './Modal';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentCase: 0,\n      currentLine: 0,\n      combination: [],\n      combinationToFind: this.generateCombination(),\n      game: [\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n      ],\n      showModal: \"hidden\",\n      nameModal: \"you win\",\n      score: 0\n    };\n    this.change = this.change.bind(this);\n    this.undo = this.undo.bind(this);\n    this.compare = this.compare.bind(this);\n    this.submit = this.submit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.score = this.score.bind(this);\n  }\n  change(color) {\n    const gameBis = [...this.state.game]\n    const combination = [...this.state.combination]\n\n    if (this.state.currentCase < 4) {\n      gameBis[this.state.currentLine][0].push(color)\n\n      this.setState((state) => ({\n        game: gameBis,\n        currentCase: state.currentCase + 1,\n      }));\n    }\n\n  }\n\nundo() {\n  const gameBis = [...this.state.game];\n\n  if (this.state.currentCase > 0) {\n    gameBis[this.state.currentLine][0].pop();\n\n    this.setState(state => ({\n      game: gameBis,\n      currentCase: state.currentCase - 1\n    }))\n  }\n}\n\nsubmit() {\n  let gameBis = [...this.state.game]\n  if (this.state.currentCase == 4) {\n    let result = this.compare();\n    for (let index = 0; index < result[0]; index++) {\n      gameBis[this.state.currentLine][1].push(\" black\")\n    }\n    for (let index = 0; index < result[1]; index++) {\n      gameBis[this.state.currentLine][1].push(\" grey\")\n    }\n\n    this.setState(state => ({\n      game: gameBis,\n      currentLine:  state.currentLine + 1,\n      currentCase: 0\n    }))\n  }\n}\n\ncompare() {\n  let combination = [...this.state.game[this.state.currentLine][0]]\n  let combinationToFind = [...this.state.combinationToFind]\n  let good = 0\n  let bad = 0\n\n  for (let index = 0; index < combination.length; index++) {\n    if (combination[index] == combinationToFind[index]) {\n      good++\n      combinationToFind[index] = \"x\"\n      combination[index] = \"a\"\n    }\n  }\n\n  for (var index = 0; index < combinationToFind.length; index++) {\n    if (combinationToFind.includes(combination[index])) {\n      bad++\n      combinationToFind[combinationToFind.indexOf(combination[index])] = \"x\"\n      combination[index] = \"a\"\n    }\n  }\n  console.log(this.state.combinationToFind);\n  if (good == 4) {\n    let score = this.state.score + 1;\n    this.setState({\n      showModal: \"show\",\n      score: score,\n      nameModal: \"you win\"\n    })\n  }\n  if (this.state.currentLine == 9) {\n    let score = this.state.score - 1;\n    this.setState({\n      showModal: \"show\",\n      score: score,\n      nameModal: \"game over\"\n    })\n  }\n  return [good,bad];\n}\n\ncloseModal() {\n  if (!(this.state.nameModal == \"scores : \"+this.state.score)) {\n    this.setState({\n      game: [\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n        [[],[]],\n      ],\n      currentCase: 0,\n      currentLine: 0,\n      combinationToFind: this.generateCombination()\n    })\n  }\n  this.setState({\n    showModal: \"hidden\"\n  })\n}\n\ngenerateCombination() {\n  let combination = []\n  for (let i = 0; i < 4; i++) {\n    let random = Math.floor(Math.random()*6)\n    let colors = [\"red\",\"blue\",\"green\",\"yellow\",\"orange\",\"purple\"]\n    combination.push(colors[random])\n  }\n  return combination;\n}\n\nscore() {\n  this.setState({\n    showModal: \"show\",\n    nameModal: \"scores : \"+this.state.score\n  })\n}\n  render() {\n  return (\n    <div className=\"App\">\n      <Navbar score={this.score}></Navbar>\n      <main>\n        <Plateau game={this.state.game}></Plateau>\n        <Control colorize={this.change} undo={this.undo} submit={this.submit}></Control>\n        <Modal showModal={this.state.showModal} closeModal={this.closeModal} nameModal={this.state.nameModal}></Modal>\n      </main>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}